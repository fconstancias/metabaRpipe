#!/usr/bin/env Rscript

rm(list = ls())

cat("\n############################################################\n")
cat("Starting \n")
cat("############################################################\n\n")

## ------------------------------------------------------------------------

require("optparse")

## ------------------------------------------------------------------------
suppressPackageStartupMessages(library("optparse"))


option_list = list(
  make_option(c("-p", "--phyloseq_path"), type="character", default = NULL, 
              help="Path of the input phyloseq object", metavar="character"),
  
  make_option(c("--picrust2_bin"), type="character", default = "picrust2_pipeline.py", 
              help="picrust2 script path", metavar="character"),
  
  make_option(c("--working_dir"), type="character", default= "~/picrust2_tmp/", 
              help="Name of the working directory", metavar="character"),
  
  make_option(c("--output"), type="character", default= "~/picrust2/", 
              help="Name of the output directory - should not exist before running the analysis", metavar="character"),
  
  make_option(c("--traits"), type="character", default= c("EC,KO"), 
              help="Traits c(COG,EC,KO,PFAM,TIGRFAM)", metavar="character"),
  
  make_option(c("--min_reads"), type="numeric", default= 1, 
              help=" ", metavar="character"),
  
  make_option(c("--min_samples"), type="numeric", default= 1, 
              help=" ", metavar="character"),
  
  make_option(c("-m", "--hsp_method "), type="character", default= "mp", 
              help='"   SP method to use."mp": predict discrete traits using
  max parsimony. "emp_prob": predict discrete traits
  based on empirical state probabilities across tips.
  "subtree_average": predict continuous traits using
  subtree averaging. "pic": predict continuous traits
  with phylogentic independent contrast. "scp":
    reconstruct continuous traits using squared-change
  parsimony "', metavar="character"),
  
  make_option(c("--no_gap_fill"), type="logical", default= FALSE, 
              help="Disabel gap filling ", metavar="character"),
  
  make_option(c("--add_description"), type="logical", default= FALSE, 
              help="add description pf Pway", metavar="character"),
  
  make_option(c("--int_rm"), type="logical", default= TRUE, 
              help="remove intermediate files", metavar="character"),
  
  make_option(c("--load_picrust2_data"), type="logical", default= FALSE, 
              help="import picrust2 data: could generate large files... ", metavar="character"),
  
  make_option(c("--return"), type="character", default = FALSE, 
              help="return picrust2 data / write to a directory", metavar="character"),
  
  make_option(c("-T", "--slots"), type="numeric", default = 6, 
              help="Number of threads to perform the analyses", metavar="numeric"),
  
  make_option(c("-f", "--fun_dir"), type="character", default= NULL, 
              help="Directory containing the R functions", metavar="character")
  
); 
opt_parser = OptionParser(option_list = option_list);
opt = parse_args(opt_parser)

## ------------------------------------------------------------------------
# parse_args(opt_parser, args = c("--help"))
# 
# if(is.null(opt$input_directory)) {
#   print_help(opt_parser)
#   stop("You must give an input directory (-i)")
# }
# 
# if(is.null(opt$atropos_binary)) {
#   print_help(opt_parser)
#   stop("You must provide path to atropos program (-a)")
# }

source(opt$fun_dir)


## ------------------------------------------------------------------------


# unlist(lapply(strsplit(opt$traits, ","), as.character)) -> opt$traits



cat(paste0('\n# Input phyloseq object: ',opt$phyloseq_path,'.\n'))
cat(paste0('\n# Output directory: ',opt$output,'.\n'))

cat(paste0('\n# picrust2_bin : ',opt$picrust2_bin,'.\n'))

cat(paste0('\n# output : ',opt$output,'.\n'))

cat(paste0('\n# min_reads : ',opt$min_reads,'.\n'))
cat(paste0('\n# min_samples : ',opt$min_samples,'.\n'))

cat(paste0('\n# Traits : ',opt$traits,'.\n'))

cat(paste0('\n# no_gap_fill : ',opt$no_gap_fill,'.\n'))

cat(paste0('\n# add_description : ',opt$add_description,'.\n'))
cat(paste0('\n# load_picrust2_data : ',opt$load_picrust2_data,'.\n'))

cat(paste0('\n# return : ',opt$return,'.\n'))
cat(paste0('\n# int_rm : ',opt$int_rm,'.\n'))

cat(paste0('\n# Threads: ',opt$slots,'.\n'))

## ------------------------------------------------------------------------


phyloseq_picrust2(physeq = opt$phyloseq_path,
                  picrust2 = opt$picrust2_bin,
                  input_dir = opt$working_dir, # 
                  output_dir = opt$output,# should not exist
                  fasta_file = "ASV.fna",
                  count_table = "ASV_table.tsv",
                  in_traits = opt$traits , #  #default: EC,KO c("COG,EC,KO,PFAM,TIGRFAM")
                  min_reads = opt$min_reads,
                  min_samples = opt$min_samples,
                  ref_dir = FALSE, #"/Users/fconstan/miniconda3/envs/picrust2/lib/python3.6/site-packages/picrust2/default_files/prokaryotic/pro_ref",
                  pathway_map = FALSE, #"/Users/fconstan/miniconda3/envs/picrust2/lib/python3.6/site-packages/picrust2/default_files/pathway_mapfiles/metacyc_path2rxn_struc_filt_pro.txt",
                  regroup_map = FALSE, #"/Users/fconstan/miniconda3/envs/picrust2/lib/python3.6/site-packages/picrust2/default_files/pathway_mapfiles/ec_level4_to_metacyc_rxn.tsv",
                  nthreads = opt$slots,
                  m = opt$hsp_method,
                  no_gap_fill = opt$no_gap_fill,
                  add_description = opt$add_description,
                  load_picrust2_data = opt$load_picrust2_data, #could generate large files...
                  return = opt$return, # true / false or path of object
                  int_rm = opt$int_rm)

## ------------------------------------------------------------------------


cat("\n\nHere some Info for the record keeping:\n\n")
print(sessionInfo())

cat("Parameters Used:\n\n")

## ------------------------------------------------------------------------


cat(paste0('\n# Input phyloseq object: ',opt$phyloseq_path,'.\n'))
cat(paste0('\n# Output directory: ',opt$output,'.\n'))

cat(paste0('\n# picrust2_bin : ',opt$picrust2_bin,'.\n'))

cat(paste0('\n# output : ',opt$output,'.\n'))

cat(paste0('\n# min_reads : ',opt$min_reads,'.\n'))
cat(paste0('\n# min_samples : ',opt$min_samples,'.\n'))

cat(paste0('\n# Traits : ',opt$traits,'.\n'))

cat(paste0('\n# no_gap_fill : ',opt$no_gap_fill,'.\n'))

cat(paste0('\n# add_description : ',opt$add_description,'.\n'))
cat(paste0('\n# load_picrust2_data : ',opt$load_picrust2_data,'.\n'))

cat(paste0('\n# return : ',opt$return,'.\n'))
cat(paste0('\n# int_rm : ',opt$int_rm,'.\n'))

cat(paste0('\n# Threads: ',opt$slots,'.\n'))

cat("\n############################################################\n")
cat("All done \n")
cat("############################################################\n\n")

print(Sys.time())

## ------------------------------------------------------------------------



