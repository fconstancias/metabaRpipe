#!/usr/bin/env Rscript

rm(list = ls())

cat("\n############################################################\n")
cat("Starting \n")
cat("############################################################\n\n")

## ------------------------------------------------------------------------

require("optparse")

## ------------------------------------------------------------------------
suppressPackageStartupMessages(library("optparse"))

option_list = list(
  
  make_option(c("--phyloseq_path"), type="character", default= NULL, 
              help="PAth of the phyloseq object to use of taxonomic assignments - must contain a refseq part with ASV sequences", metavar="character"),
  
  make_option(c("--tax_threshold"), type="numeric", default= 50, 
              help="Threshold for taxonomic assignments [the minimum bootstrap confidence for assigning a taxonomic level.", metavar="character"),
  
  make_option(c("--reverse_comp"), type="logical", default = TRUE, 
              help="Perform taxonomic assignments also on reversed complemented ASV sequence?", metavar="character"),
  
  make_option(c("--db"), type="character", default = "~/db/DADA2/GTDB_r95-mod_August2020.RData", 
              help="Path to the taxonomic database", metavar="character"),
  
  make_option(c("--export"), type="character", default = "./", 
              help= "Export output", metavar="character"),
  
  make_option(c("--return"), type="logical", default = FALSE, 
              help= "Return output?", metavar="character"),
  
  make_option(c("-T", "--slots"), type="numeric", default = 6, 
              help="Number of threads to perform the analyses", metavar="numeric"),
  
  make_option(c("--seed_value"), type="numeric", default = 123, 
              help="Seed value for random number generator", metavar="numeric"),
  
  make_option(c("-f", "--fun_dir"), type="character", default= NULL, 
              help="Directory containing the R functions", metavar="character")
  
  
); 
opt_parser = OptionParser(option_list = option_list);
opt = parse_args(opt_parser)

## ------------------------------------------------------------------------
# parse_args(opt_parser, args = c("--help"))
# 
# if(is.null(opt$input_directory)) {
#   print_help(opt_parser)
#   stop("You must give an input directory (-i)")
# }
# 
# if(is.null(opt$atropos_binary)) {
#   print_help(opt_parser)
#   stop("You must provide path to atropos program (-a)")
# }

# unlist(lapply(strsplit(opt$trunclen, ","), as.numeric)) -> opt$trunclen


source(opt$fun_dir)
## ------------------------------------------------------------------------
cat(paste0('\n# Input physeq path : ',opt$phyloseq_path,'.\n'))

cat(paste0('\n# tax_threshold: ',opt$tax_threshold,'.\n'))

cat(paste0('\n# database: ',opt$db,'.\n'))

cat(paste0('\n# REverse complement? ',opt$tryRC,'.\n'))

cat(paste0('\n# Export to: ',opt$export,'.\n'))
cat(paste0('\n# Return? ',opt$return,'.\n'))

cat(paste0('\n# slots: ',opt$slots,'.\n'))
cat(paste0('\n# Seed value for random number generator: ',opt$seed_value,'.\n'))
cat(paste0('\n# Directory for R script: ',opt$fun_dir,'.\n'))

## ------------------------------------------------------------------------

phyloseq_DECIPHER_tax(physeq = opt$phyloseq_path,
                      threshold = opt$tax_threshold,
                      nthreads = opt$slots,
                      tryRC = opt$reverse_comp,
                      db = opt$db,
                      export = opt$export,
                      return = opt$return,
                      seed_value = opt$set_seed)


## ------------------------------------------------------------------------


cat("\n\nHere some Info for the record keeping:\n\n")
print(sessionInfo())

cat("Parameters Used:\n\n")

cat(paste0('\n# Input physeq path : ',opt$phyloseq_path,'.\n'))

cat(paste0('\n# tax_threshold: ',opt$tax_threshold,'.\n'))

cat(paste0('\n# database: ',opt$db,'.\n'))

cat(paste0('\n# REverse complement? ',opt$tryRC,'.\n'))

cat(paste0('\n# Export to: ',opt$export,'.\n'))
cat(paste0('\n# Return? ',opt$return,'.\n'))

cat(paste0('\n# slots: ',opt$slots,'.\n'))
cat(paste0('\n# Seed value for random number generator: ',opt$seed_value,'.\n'))
cat(paste0('\n# Directory for R script: ',opt$fun_dir,'.\n'))
cat(paste0('\n# Directory for R script: ',opt$fun_dir,'.\n'))

cat("\n############################################################\n")
cat("All done \n")
cat("############################################################\n\n")

print(Sys.time())

## ------------------------------------------------------------------------
