#!/usr/bin/env Rscript

rm(list = ls())

cat("\n############################################################\n")
cat("Starting \n")
cat("############################################################\n\n")

## ------------------------------------------------------------------------

require("optparse")

## ------------------------------------------------------------------------
suppressPackageStartupMessages(library("optparse"))

option_list = list(
make_option(c("-i","--input_dir"), type="character", default = "dada2/00_atropos_primer_removed", 
              help="Directory for atropos PCR primer removed reads", metavar="character"),
  
  make_option(c("--file_pattern"), type="character", default = c("_primersout_R1_.fastq.gz","_primersout_R2_.fastq.gz"), 
              help="Patterns for R1 and R2 of atropos files", metavar="character"),
  
  make_option(c("-o","--output"), type="character", default = "dada2/02_dada2_filtered_denoised_merged", 
              help="Directory for filtered reads", metavar="character"),
  
  make_option(c("--sep"), type="character", default = "[^_]+", 
              help="regex pattern to identify sample names  [default: after first _]", metavar="character"),

  make_option(c("--nbases"), type="numeric", default = 20000000, 
              help="Number of bases for error learning step", metavar="character"),
  
  make_option(c("--pool"), type="character", default = "pseudo", 
              help="Pooling strategy", metavar="character"),
  
  make_option(c("--minover"), type="numeric", default = 15, 
              help="Minimum overlap for merginf R1 and R2 reads [if using -V V4 or V3V4, this parameter is already set]", metavar="character"),
  
  make_option(c("--trunclen"), type="character", default = c(260,250), 
              help="Nucleotide position to truncate the Fwd and Rev reads at [if using -V V4 or V3V4, this parameter is already set]", metavar="character"),
  
  make_option(c("--maxee"), type="character", default = c(3,4), 
              help="Maximum expected error for Fwd and Rev reads [if using -V V4 or V3V4, this parameter is already set]", metavar="character"),
  
  make_option(c("--minLen"), type="numeric", default = 100, 
              help="Minimul read length [if using -V V3 or V3V4, this parameter is already set]", metavar="character"),
  
  make_option(c("--remove_input_fastq"), type="logical", default = FALSE, 
              help= "Remove intermediate fastq.gz files", metavar="character"),
  
  make_option(c("-T", "--slots"), type="numeric", default = 6, 
              help="Number of threads to perform the analyses", metavar="numeric"),
  
  make_option(c("--seed_value"), type="numeric", default = 123, 
              help="Seed value for random number generator", metavar="numeric"),
  
  make_option(c("-f", "--fun_dir"), type="character", default= NULL, 
              help="Directory containing the R functions", metavar="character")
  
  
); 
opt_parser = OptionParser(option_list = option_list);
opt = parse_args(opt_parser)

## ------------------------------------------------------------------------
# parse_args(opt_parser, args = c("--help"))
# 
# if(is.null(opt$input_directory)) {
#   print_help(opt_parser)
#   stop("You must give an input directory (-i)")
# }
# 
# if(is.null(opt$atropos_binary)) {
#   print_help(opt_parser)
#   stop("You must provide path to atropos program (-a)")
# }

unlist(lapply(strsplit(opt$trunclen, ","), as.numeric)) -> opt$trunclen
unlist(lapply(strsplit(opt$maxee, ","), as.numeric)) -> opt$maxee
unlist(lapply(strsplit(opt$file_pattern, ","), as.character)) -> opt$file_pattern


source(opt$fun_dir)
## ------------------------------------------------------------------------
cat(paste0('\n# Input directory ',opt$input_dir,'.\n'))
cat(paste0('\n# output directory ',opt$output,'.\n'))

cat(paste0('\n# File pattern ',opt$file_pattern,'.\n'))
cat(paste0('\n# trunclen: ',opt$trunclen,'.\n'))
cat(paste0('\n# maxee: ',opt$maxee,'.\n'))
cat(paste0('\n# slots: ',opt$slots,'.\n'))

## ------------------------------------------------------------------------

run_dada2_filter_denoise_merge_reads(cut_dir = opt$input_dir,
                                     cut_file_pattern = opt$file_pattern,
                                     trunclen = opt$trunclen,
                                     maxLen = Inf,
                                     maxee = opt$maxee,
                                     minLen = opt$minLen, #250 #350 in initial analysis which makes sense according to read/ASV distrib and 16S V3V4 distrib
                                     nthreads = opt$slots,
                                     nbases = opt$nbases,
                                     pool = opt$pool,
                                     minover = opt$minover,
                                     filt_dir = opt$output,
                                     seed_value = opt$seed_value,
                                     export = TRUE,
                                     sep = opt$sep,
                                     remove_input_fastq = opt$remove_input_fastq)

## ------------------------------------------------------------------------


cat("\n\nHere some Info for the record keeping:\n\n")
print(sessionInfo())

cat("Parameters Used:\n\n")

cat(paste0('\n# Input directory ',opt$input_dir,'.\n'))
cat(paste0('\n# output directory ',opt$output,'.\n'))

cat(paste0('\n# File pattern ',opt$file_pattern,'.\n'))
cat(paste0('\n# trunclen: ',opt$trunclen,'.\n'))
cat(paste0('\n# maxee: ',opt$maxee,'.\n'))
cat(paste0('\n# slots: ',opt$slots,'.\n'))

cat("\n############################################################\n")
cat("All done \n")
cat("############################################################\n\n")

print(Sys.time())

## ------------------------------------------------------------------------
